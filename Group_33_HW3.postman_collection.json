{
	"info": {
		"_postman_id": "6ee4cec7-1859-47a6-b2ed-648f9ea49746",
		"name": "Group_33_HW3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26169500"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var jsonData = pm.response.json();",
							"    var resp_token = jsonData.token",
							"console.log(resp_token)",
							"pm.environment.set(\"token\", resp_token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Anton",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Anton",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"  var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"person\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"u_age\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"u_name\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"string\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"u_age\",",
							"        \"u_name\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"qa_salary_after_12_months\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"qa_salary_after_6_months\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"start_qa_salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"person\",",
							"    \"qa_salary_after_12_months\",",
							"    \"qa_salary_after_6_months\",",
							"    \"start_qa_salary\"",
							"  ]",
							"}",
							"",
							"",
							"",
							"pm.test(\"Validating.schema\",()=>{",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"",
							"pm.test(\"Qa_salary_after_6_months = Req Salary * 2\", function () {",
							"    var resp = pm.response.json();",
							"    var req = JSON.parse(pm.request.body.raw);",
							"   var req_salary = +req.salary;",
							"      pm.expect(resp.qa_salary_after_6_months).to.eql(req_salary*2);",
							"});",
							"pm.test(\"Qa_salary_after_12_months = Req Salary * 2.9\", function () {",
							"    var resp = pm.response.json();",
							"    var req = JSON.parse(pm.request.body.raw);",
							"   var req_salary = +req.salary;",
							"    ",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req_salary*2.9);",
							"});",
							"",
							"pm.test(\"U_salary_1_5_year = Req Salary * 4\", function () {",
							"    var resp = pm.response.json();",
							"    var req = JSON.parse(pm.request.body.raw);",
							"   var req_salary = +req.salary;",
							"  pm.expect(resp.person[\"u_salary_1_5_year\"]).to.eql(req_salary*4);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"    var resp_u_salary_1_5_year = jsonData.person.u_salary_1_5_year;",
							"",
							"pm.environment.set(\"salary_get_test\", resp_u_salary_1_5_year);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"age\": 22,\n\"salary\": 2200,\n\"name\": \"Anton\",\n\"auth_token\":\"{{token}}\"\n\n\n\n\n\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/user_info",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = \r",
							"{\r",
							"  \r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Validating.schema\",()=>{\r",
							"pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary * 2\", function () {\r",
							"    var resp = pm.response.json();\r",
							"    var req = request.data;\r",
							"   var req_salary = +req.salary;\r",
							"    resp_sel_1 = +resp.salary[1];\r",
							"    pm.expect(resp_sel_1).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary * 3\", function () {\r",
							"    var resp = pm.response.json();\r",
							"    var req = request.data;\r",
							"   var req_salary = +req.salary;\r",
							"    resp_sel_2 = +resp.salary[2];\r",
							"    pm.expect(resp_sel_2).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[2]>Salary[0] and Salary[2]\", function () {\r",
							"    var resp = pm.response.json();\r",
							"    resp_sel_2 = +resp.salary[2];\r",
							"     resp_sel_1 = +resp.salary[1];\r",
							"     resp_sel_0 = +resp.salary[0];\r",
							"\r",
							"    pm.expect(resp_sel_2).to.be.above( resp_sel_1);\r",
							"    pm.expect(resp_sel_2).to.be.above( resp_sel_0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/new_data",
					"host": [
						"{{URL}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = ",
							"{",
							"  ",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"daily_food\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"daily_sleep\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"daily_food\",",
							"    \"daily_sleep\",",
							"    \"name\"",
							"  ]",
							"}",
							"pm.test(\"Validating.schema\",()=>{",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"daily_sleep = weight*2.5\", function () {",
							"    var resp = pm.response.json();",
							"    var req = request.data;",
							"   var req_weight = +req.weight;",
							"   ",
							"    pm.expect(resp.daily_sleep).to.eql(req_weight*2.5);",
							"});",
							"",
							"pm.test(\"daily_food = weight/83.33333333333333\", function () {",
							"    var resp = pm.response.json();",
							"    var req = request.data;",
							"   var req_weight = +req.weight;",
							"   ",
							"    pm.expect(resp.daily_food).to.eql(req_weight/83.33333333333333);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "65",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Anton",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/test_pet_info",
					"host": [
						"{{URL}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema =",
							"{",
							"  ",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"family\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"children\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            },",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"children\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"family\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"pm.test(\"Validating.schema\",()=>{",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"resp name = environment name\", function () {",
							"    var resp = pm.response.json();",
							"",
							"    pm.expect(resp.name).to.eql(environment.name);",
							"});",
							"",
							"pm.test(\"resp age = req age\", function () {",
							"    var resp = pm.response.json();",
							"    var req = request.data;",
							"    pm.expect(resp.age).to.eql(req.age);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary_get_test}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/get_test_user",
					"host": [
						"{{URL}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{URL}}/currency",
					"host": [
						"{{URL}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema =",
							"{",
							"  ",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"Cur_Abbreviation\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"Cur_ID\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"Cur_Name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"Cur_OfficialRate\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"Cur_Scale\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"Date\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"Cur_Abbreviation\",",
							"    \"Cur_ID\",",
							"    \"Cur_Name\",",
							"    \"Cur_OfficialRate\",",
							"    \"Cur_Scale\",",
							"    \"Date\"",
							"  ]",
							"}",
							"pm.test(\"Validating.schema\",()=>{",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{cur_id}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}